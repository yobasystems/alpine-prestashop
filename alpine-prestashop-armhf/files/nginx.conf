daemon off;
error_log stderr notice;
pid /var/run/nginx.pid;
env MYSQL_HOST;
env MYSQL_DATABASE;
env MYSQL_USER;
env MYSQL_PASSWORD;

worker_processes  1;
events {
    worker_connections  1024;
}

http {
    sendfile on;
    include    /etc/nginx/mime.types;
    include    /etc/nginx/fastcgi.conf;
    default_type application/octet-stream;
    access_log stdout;
    tcp_nopush   on;
    client_body_temp_path /tmp/nginx/body 1 2;
    fastcgi_temp_path /tmp/nginx/fastcgi_temp 1 2;

    log_format blocked '$time_local: Blocked request from $http_x_real_ip $request';

    log_format specialLog '$http_x_real_ip - $remote_user [$time_local]  '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent"';

    log_format cloudflare '$http_cf_connecting_ip - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent"';

    client_max_body_size 32M;

    # Internal Loadbalancer IP ranges
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    # Internal Loadbalancer carrier NAT (Scaleway)
    set_real_ip_from 100.64.0.0/10;

    # Cloudflare Loadbalancer IP ranges
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/12;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2c0f:f248::/32;
    set_real_ip_from 2a06:98c0::/29;

    #real_ip_header CF-Connecting-IP;

    server {
        charset utf-8;
        # IPv4.
        listen 80;
        # listen 443 ssl http2;

        # IPv6.
        # listen [::]:80;
        # listen [::]:443 ssl http2;

        # [EDIT] Your domain name(s) go here.
        server_name www.example.co.uk;

        # [EDIT] Path to your domain Nginx logs.
        access_log stdout specialLog;
        error_log stderr notice;

        # [EDIT] Path to your SSL certificates (take a look at Certbot https://certbot.eff.org).
        # ssl_certificate /etc/ssl/fullchain.pem;
        # ssl_certificate_key /etc/ssl/privkey.pem;

        # [EDIT] Path to your PrestaShop directory.
        root /usr/html;

        index index.php;

        # This should match the `post_max_size` and/or `upload_max_filesize` settings
        # in your php.ini.
        client_max_body_size 16M;

        # Redirect 404 errors to PrestaShop.
        error_page 404 /index.php?controller=404;

        # HSTS (Force clients to interact with your website using HTTPS only).
        # For enhanced security, register your site here: https://hstspreload.org/.
        # WARNING: Don't use this if your site is not fully on HTTPS!
        # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" preload; always;

        # [EDIT] If you are using multiple languages.
        # rewrite ^/fr$ /fr/ redirect;
        # rewrite ^/fr/(.*) /$1;

        # Images.
        rewrite ^/(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$1$2.jpg last;
        rewrite ^/(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$1$2$3.jpg last;
        rewrite ^/(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$1$2$3$4.jpg last;
        rewrite ^/(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$1$2$3$4$5.jpg last;
        rewrite ^/(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$1$2$3$4$5$6.jpg last;
        rewrite ^/(\d)(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$1$2$3$4$5$6$7.jpg last;
        rewrite ^/(\d)(\d)(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$1$2$3$4$5$6$7$8.jpg last;
        rewrite ^/(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$8/$1$2$3$4$5$6$7$8$9.jpg last;
        rewrite ^/c/([\w.-]+)/.+\.jpg$ /img/c/$1.jpg last;

        # AlphaImageLoader for IE and FancyBox.
        rewrite ^images_ie/?([^/]+)\.(gif|jpe?g|png)$ js/jquery/plugins/fancybox/images/$1.$2 last;

        # Web service API.
        rewrite ^/api/?(.*)$ /webservice/dispatcher.php?url=$1 last;

        # Installation sandbox.
        rewrite ^(/install(?:-dev)?/sandbox)/.* /$1/test.php last;

        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        # [EDIT] Replace 'admin' in this block with the name of your admin directory.
        location /admin/ {
            if (!-e $request_filename) {
                rewrite ^ /admin/index.php last;
            }
        }

        # .htaccess, .DS_Store, .htpasswd, etc.
        location ~ /\. {
            deny all;
        }

        # Source code directories.
        location ~ ^/(app|bin|cache|classes|config|controllers|docs|localization|override|src|tests|tools|translations|var|vendor)/ {
            deny all;
        }

        # vendor in modules directory.
        location ~ ^/modules/.*/vendor/ {
            deny all;
        }

        # Prevent exposing other sensitive files.
        location ~ \.(log|tpl|twig|sass|yml)$ {
            deny all;
        }

        # Prevent injection of PHP files.
        location /img {
            location ~ \.php$ { deny all; }
        }

        location /upload {
            location ~ \.php$ { deny all; }
        }
        
        location ~* \.(eot|otf|ttf|woff(?:2)?)$ {
            add_header Access-Control-Allow-Origin *;
        }

        location ~* \.pdf$ {
            add_header Content-Disposition Attachment;
            add_header X-Content-Type-Options nosniff;
        }

        location ~ ^/upload/ {
            add_header Content-Disposition Attachment;
            add_header X-Content-Type-Options nosniff;
        }

        location = /favicon.ico {
            auth_basic off;
            allow all;
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            auth_basic off;
            allow all;
            log_not_found off;
            access_log off;
        }

        location = /.well-known/security.txt {
            auth_basic off;
            allow all;
            log_not_found off;
            access_log off;
        }

        location = /.well-known/apple-developer-merchantid-domain-association {
            auth_basic off;
            allow all;
            log_not_found off;
            access_log off;
        }

        location ~ [^/]\.php(/|$) {
            # Split $uri to $fastcgi_script_name and $fastcgi_path_info.
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;

            # Ensure that the requested PHP script exists before passing it
            # to the PHP-FPM.
            try_files $fastcgi_script_name =404;

            # Environment variables for PHP.
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $request_filename;

            fastcgi_index index.php;

            fastcgi_keep_conn on;
            fastcgi_read_timeout 180s;
            fastcgi_send_timeout 180s;
            fastcgi_connect_timeout 60s;

            client_max_body_size 30M;
            fastcgi_max_temp_file_size 0;
            fastcgi_temp_file_write_size 256k;

            fastcgi_buffer_size 256k;
            fastcgi_buffers 256 16k;
            fastcgi_busy_buffers_size 256k;

            # [EDIT] Connection to PHP-FPM unix domain socket.
            fastcgi_pass unix:/var/run/php7-fpm.sock;
        }
    }
}